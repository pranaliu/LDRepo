{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar context_1 = __importDefault(require(\"./context\")); // tslint:disable:max-line-length\n\n/**\n * `useLDClient` is a custom hook which returns the underlying [LaunchDarkly JavaScript SDK client object](https://launchdarkly.github.io/js-client-sdk/interfaces/_launchdarkly_js_client_sdk_.ldclient.html).\n * Like the `useFlags` custom hook, `useLDClient` also uses the `useContext` primitive to access the LaunchDarkly\n * context set up by `withLDProvider`. You will still need to use the `withLDProvider` HOC\n * to initialise the react sdk to use this custom hook.\n *\n * @return The `launchdarkly-js-client-sdk` `LDClient` object\n */\n// tslint:enable:max-line-length\n\n\nvar useLDClient = function useLDClient() {\n  var ldClient = (0, react_1.useContext)(context_1.default).ldClient;\n  return ldClient;\n};\n\nexports.default = useLDClient;","map":null,"metadata":{},"sourceType":"script"}